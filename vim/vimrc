" --- GENERAL ---

" https://github.com/changemewtf/no_plugins
" file autocomplete with subfolders
set path+=**
set wildmenu

" tweaks for the file browser
let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view

" the following settings are copied from somewhere and
" are the default "sane" things to have in vimrc
" (I guess)

" break line only on certain characters
set linebreak

" enable line numbers and use relative numbering - really helpful in vim!
set number
set relativenumber

" show the typed commands in the status line
set showcmd

" real men use true color support
" TODO: ehm, this does not work with 'altercation/vim-colors-solarized' :shrug:
" set termguicolors

" --- KEYS ---

" leader keys
let g:mapleader="\<Space>"
let g:maplocalleader=','

" disable q: and Q because I always press them
" by mistake and I never actually use them
map q: <Nop>
nnoremap Q <Nop>

" window-handling keybindings
nnoremap <silent> <Leader>wc <C-w>c
nnoremap <silent> <Leader>wo <C-w>o

" file-specific keybindings
nnoremap <silent> <Leader>ff :Files<CR>
nnoremap <silent> <Leader>fg :GFiles?<CR>
nnoremap <silent> <Leader>fw :write<CR>

" dotfile specific
nnoremap <silent> <Leader>fde :edit $MYVIMRC<CR>
nnoremap <silent> <Leader>fdr :source $MYVIMRC<CR>

" jumping around the file using vim-easymotion plugin
nmap ;; <Plug>(easymotion-bd-fn)
nmap ;l <Plug>(easymotion-bd-jk)
nmap ;n <Plug>(easymotion-bd-n)

" refactoring
nnoremap <silent> <Leader>rn :YcmCompleter RefactorRename<CR>
nnoremap <silent> <Leader>rf :YcmCompleter FitIt<CR>

" --- PLUGINS ---

" automagically install vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" open vim-plug windows on the bottom
let g:plug_window='botright 10new'

" tell easemotion to ignore case
let g:EasyMotion_smartcase=1
let g:EasyMotion_do_mapping=0

" plugin list
call plug#begin('~/.vim/plugged')
Plug 'liuchengxu/vim-better-default'
Plug 'altercation/vim-colors-solarized'
Plug 'liuchengxu/vim-which-key'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim' " TODO: set up keymaps for commands and customize options
Plug 'easymotion/vim-easymotion'
Plug 'terryma/vim-multiple-cursors'
Plug 'sheerun/vim-polyglot'
Plug 'ycm-core/YouCompleteMe', { 'do': './install.py --clangd-completer --ts-completer' } " TODO: set up keymaps
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-fugitive' " TODO: learn and set this up <3
call plug#end()

" vim-which-key configuration
" display help after 1000ms
set timeoutlen=1000
" for what keys to display help
nnoremap <silent> <Leader> :<c-u>WhichKey '<Space>'<CR>
nnoremap <silent> <LocalLeader> :<c-u>WhichKey ','<CR>

" use ag for the ack.vim plugin
let g:ackprg = 'ag --vimgrep'

" --- OVERWRITING DEFAULTS ---
" Because the plugin vim-better-defaults would be by default loaded after my
" vimrc and overwrite all of my settings.
" https://github.com/liuchengxu/vim-better-default#how-to-override-the-existing-settings

" Previously I used "runtime! plugin/default.vim" as suggested in the link
" above. But, manually including this file like this makes it work for IdeaVim, too.
source ~/.vim/plugged/vim-better-default/plugin/default.vim

" use solarized colors <3
colorscheme solarized

" automatically switch between light and dark theme based on
" iTerm's theme (which is in turn based on OS)
if $ITERM_PROFILE == "Dark"
    set background=dark
else
    set background=light
endif

